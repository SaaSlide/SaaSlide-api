name: CI
on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    # env secrets stocked in settings github project
    env:
      GH_ACCESS_TOKEN: ${{ secrets.GITHUB_SECRET }}
      FRONT_URL: http://localhost:3000
      JWT_SIGN_SECRET: ${{ secrets.JWT_SIGN_SECRET }}
      PORT: 4000
      SOCKET_PORT: 4001
      URI_DB: ${{ secrets.URI_DB }}
      NAME_DB: ${{ secrets.NAME_DB }}
      PASSWORD_DB: ${{ secrets.PASSWORD_DB }}
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
      
    steps:

      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.6'

      - name: Install Dependencies
        run: yarn install

      - name: Run Test
        run: yarn run test

      - name: Run Lint
        run: yarn run eslint


      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }} # le compte de celui qui push
          password: ${{ secrets.TOKEN_GIT }} # token github

      - name: Extract metadata (tags, labels) for Docker
        if: github.event_name != 'pull_request'
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

  #     - name: Set up QEMU
  #       if: github.event_name != 'pull_request'
  #       uses: docker/setup-qemu-action@v2

  #     - name: Set up Docker Buildx
  #       if: github.event_name != 'pull_request'
  #       uses: docker/setup-buildx-action@v2

  #     - name: Docker Push
  #       if: github.event_name != 'pull_request'
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: .
  #         file: ./Dockerfile
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}

  # deploy:
  #   if: github.event_name != 'pull_request' && github.ref == 'refs/heads/develop'
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Set up Kubectl
  #       uses: azure/setup-kubectl@v1
  #       with:
  #         version: 'v1.22.11'

  #     - name: Configure Kubectl
  #       run: |
  #         echo $KUBE_CONFIG | base64 -d > kubeconfig
  #       env:
  #         KUBE_CONFIG: ${{ secrets.KUBE_INT_CONFIG }}

  #     - name: Deploy to Integration
  #       run: |
  #         kubectl --kubeconfig=./kubeconfig \
  #           --context=integration \
  #           patch job pentair-sns-notification-job -p '{"spec":{"template":{"metadata":{"labels":{"build_number":"${{ github.run_id }}"}}}}}'
